// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_basic.proto

#ifndef PROTOBUF_INCLUDED_proto_5fbasic_2eproto
#define PROTOBUF_INCLUDED_proto_5fbasic_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_proto_5fbasic_2eproto 

namespace protobuf_proto_5fbasic_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_proto_5fbasic_2eproto
namespace top {
namespace evm_engine {
namespace basic {
class ProtoAddress;
class ProtoAddressDefaultTypeInternal;
extern ProtoAddressDefaultTypeInternal _ProtoAddress_default_instance_;
class RawU256;
class RawU256DefaultTypeInternal;
extern RawU256DefaultTypeInternal _RawU256_default_instance_;
class WeiU256;
class WeiU256DefaultTypeInternal;
extern WeiU256DefaultTypeInternal _WeiU256_default_instance_;
}  // namespace basic
}  // namespace evm_engine
}  // namespace top
namespace google {
namespace protobuf {
template<> ::top::evm_engine::basic::ProtoAddress* Arena::CreateMaybeMessage<::top::evm_engine::basic::ProtoAddress>(Arena*);
template<> ::top::evm_engine::basic::RawU256* Arena::CreateMaybeMessage<::top::evm_engine::basic::RawU256>(Arena*);
template<> ::top::evm_engine::basic::WeiU256* Arena::CreateMaybeMessage<::top::evm_engine::basic::WeiU256>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace top {
namespace evm_engine {
namespace basic {

// ===================================================================

class ProtoAddress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.evm_engine.basic.ProtoAddress) */ {
 public:
  ProtoAddress();
  virtual ~ProtoAddress();

  ProtoAddress(const ProtoAddress& from);

  inline ProtoAddress& operator=(const ProtoAddress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoAddress(ProtoAddress&& from) noexcept
    : ProtoAddress() {
    *this = ::std::move(from);
  }

  inline ProtoAddress& operator=(ProtoAddress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoAddress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoAddress* internal_default_instance() {
    return reinterpret_cast<const ProtoAddress*>(
               &_ProtoAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProtoAddress* other);
  friend void swap(ProtoAddress& a, ProtoAddress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoAddress* New() const final {
    return CreateMaybeMessage<ProtoAddress>(NULL);
  }

  ProtoAddress* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtoAddress>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtoAddress& from);
  void MergeFrom(const ProtoAddress& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoAddress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:top.evm_engine.basic.ProtoAddress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fbasic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RawU256 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.evm_engine.basic.RawU256) */ {
 public:
  RawU256();
  virtual ~RawU256();

  RawU256(const RawU256& from);

  inline RawU256& operator=(const RawU256& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RawU256(RawU256&& from) noexcept
    : RawU256() {
    *this = ::std::move(from);
  }

  inline RawU256& operator=(RawU256&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RawU256& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RawU256* internal_default_instance() {
    return reinterpret_cast<const RawU256*>(
               &_RawU256_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RawU256* other);
  friend void swap(RawU256& a, RawU256& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RawU256* New() const final {
    return CreateMaybeMessage<RawU256>(NULL);
  }

  RawU256* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RawU256>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RawU256& from);
  void MergeFrom(const RawU256& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RawU256* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:top.evm_engine.basic.RawU256)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fbasic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeiU256 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.evm_engine.basic.WeiU256) */ {
 public:
  WeiU256();
  virtual ~WeiU256();

  WeiU256(const WeiU256& from);

  inline WeiU256& operator=(const WeiU256& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WeiU256(WeiU256&& from) noexcept
    : WeiU256() {
    *this = ::std::move(from);
  }

  inline WeiU256& operator=(WeiU256&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WeiU256& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WeiU256* internal_default_instance() {
    return reinterpret_cast<const WeiU256*>(
               &_WeiU256_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(WeiU256* other);
  friend void swap(WeiU256& a, WeiU256& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WeiU256* New() const final {
    return CreateMaybeMessage<WeiU256>(NULL);
  }

  WeiU256* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WeiU256>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WeiU256& from);
  void MergeFrom(const WeiU256& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WeiU256* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:top.evm_engine.basic.WeiU256)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_proto_5fbasic_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoAddress

// bytes value = 1;
inline void ProtoAddress::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoAddress::value() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.basic.ProtoAddress.value)
  return value_.GetNoArena();
}
inline void ProtoAddress::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.evm_engine.basic.ProtoAddress.value)
}
#if LANG_CXX11
inline void ProtoAddress::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.evm_engine.basic.ProtoAddress.value)
}
#endif
inline void ProtoAddress::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.evm_engine.basic.ProtoAddress.value)
}
inline void ProtoAddress::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.evm_engine.basic.ProtoAddress.value)
}
inline ::std::string* ProtoAddress::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:top.evm_engine.basic.ProtoAddress.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoAddress::release_value() {
  // @@protoc_insertion_point(field_release:top.evm_engine.basic.ProtoAddress.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoAddress::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.basic.ProtoAddress.value)
}

// -------------------------------------------------------------------

// RawU256

// bytes data = 1;
inline void RawU256::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RawU256::data() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.basic.RawU256.data)
  return data_.GetNoArena();
}
inline void RawU256::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.evm_engine.basic.RawU256.data)
}
#if LANG_CXX11
inline void RawU256::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.evm_engine.basic.RawU256.data)
}
#endif
inline void RawU256::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.evm_engine.basic.RawU256.data)
}
inline void RawU256::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.evm_engine.basic.RawU256.data)
}
inline ::std::string* RawU256::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:top.evm_engine.basic.RawU256.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RawU256::release_data() {
  // @@protoc_insertion_point(field_release:top.evm_engine.basic.RawU256.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RawU256::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.basic.RawU256.data)
}

// -------------------------------------------------------------------

// WeiU256

// bytes data = 1;
inline void WeiU256::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WeiU256::data() const {
  // @@protoc_insertion_point(field_get:top.evm_engine.basic.WeiU256.data)
  return data_.GetNoArena();
}
inline void WeiU256::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.evm_engine.basic.WeiU256.data)
}
#if LANG_CXX11
inline void WeiU256::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.evm_engine.basic.WeiU256.data)
}
#endif
inline void WeiU256::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.evm_engine.basic.WeiU256.data)
}
inline void WeiU256::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.evm_engine.basic.WeiU256.data)
}
inline ::std::string* WeiU256::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:top.evm_engine.basic.WeiU256.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WeiU256::release_data() {
  // @@protoc_insertion_point(field_release:top.evm_engine.basic.WeiU256.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WeiU256::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:top.evm_engine.basic.WeiU256.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace basic
}  // namespace evm_engine
}  // namespace top

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_proto_5fbasic_2eproto
